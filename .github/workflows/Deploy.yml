name: Deploy to EC2

on:
  workflow_dispatch:

jobs:
  api-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install Newman
        run: npm install -g newman

      - name: Run Postman Collection
        run: |
          newman run postman/certigest-collection.json \
            -e postman/certigest-env.json \
            --reporters cli,html \
            --reporter-html-export newman-report.html

  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/springapp:latest .

      - name: Push image to DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/springapp:latest

      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/springapp:latest
            docker stop springapp || true
            docker rm springapp || true
            docker run -d \
              --name springapp \
              -p 8443:8443 \
              -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
              -e DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }} \
              -e DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
              -e KEY_STORE_PASSWORD=${{ secrets.KEY_STORE_PASSWORD }} \
              -v /opt/certificates:/opt/certificates \
              ${{ secrets.DOCKER_USERNAME }}/springapp:latest
